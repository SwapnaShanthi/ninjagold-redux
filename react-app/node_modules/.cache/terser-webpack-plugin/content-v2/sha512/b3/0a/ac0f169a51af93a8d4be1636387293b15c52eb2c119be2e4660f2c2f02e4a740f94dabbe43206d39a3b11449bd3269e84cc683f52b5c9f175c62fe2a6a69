{"map":"{\"version\":3,\"sources\":[\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/logo.svg\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/redux.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/components/NinjaGoldCount.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/components/NinjaGoldPlayerArena.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/components/NinjaGoldActionTracker.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/components/NinjaGoldMain.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/App.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/serviceWorker.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"loadDetails\",\"payload\",\"type\",\"updateNinjaDetails\",\"ninjaReducer\",\"state\",\"arguments\",\"length\",\"undefined\",\"initialState\",\"action\",\"console\",\"log\",\"Object\",\"assign\",\"ninjaActionTrackerList\",\"ninjaactions\",\"goldCount\",\"goldcount\",\"count\",\"concat\",\"toConsumableArray\",\"store\",\"createStore\",\"configureStore\",\"NinjaGoldCount\",\"props\",\"_this\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"react_default\",\"a\",\"createElement\",\"className\",\"Component\",\"connect\",\"dispatch\",\"NinjaGoldPlayerArena\",\"handleNinjaActivity\",\"min\",\"max\",\"Math\",\"floor\",\"random\",\"textMessage\",\"objectToUpdate\",\"setTimeout\",\"updateServer\",\"ninjaTrackerDetails\",\"id\",\"axios\",\"post\",\"then\",\"response\",\"data\",\"setState\",\"error\",\"catch\",\"_this2\",\"onClick\",\"NinjaGoldActionTracker\",\"displayNinjaActionTracker\",\"map\",\"item\",\"index\",\"NinjaGoldMain\",\"retriveNinjaDetails\",\"get\",\"components_NinjaGoldCount\",\"components_NinjaGoldPlayerArena\",\"components_NinjaGoldActionTracker\",\"App\",\"components_NinjaGoldMain\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"es\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import {\\n    createStore,\\n} from 'redux';\\nimport update from 'react-addons-update';\\n\\nexport const loadDetails = (payload) => ({\\n    type: 'RETRIVE_ALL',   \\n    payload                     // <-- action.type\\n});\\nexport const updateNinjaDetails = (payload) => ({\\n    type: 'UPDATE',   \\n    payload                     // <-- action.type\\n});\\n\\n\\nexport const ninjaReducer=(state =initialState, action)=>{\\n    console.log(\\\"reducer state\\\",state,action.type);\\n    switch (action.type) {\\n        \\n      case 'RETRIVE_ALL':\\n            return Object.assign({},\\n                                state,\\n                                {ninjaActionTrackerList:action.payload.ninjaactions,goldCount:action.payload.goldcount})\\n      case 'UPDATE':\\n            let count=action.payload.goldcount+state.goldCount;\\n             return Object.assign({},\\n                                  state,\\n                                  {ninjaActionTrackerList:[...state.ninjaActionTrackerList,action.payload.ninjaactions],goldCount:count})\\n      \\n      \\n       default:\\n             return state;\\n    }\\n}\\n\\n\\n\\nconst initialState = { \\n    ninjaActionTrackerList: [],\\n    goldCount:0             \\n};\\n\\nexport function configureStore(initialState = initialState) { // initialState = initialState | {}\\n    const store = createStore(ninjaReducer,initialState);\\n    return store;\\n};\\n\\nexport const store = configureStore();\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { loadDetails,updateNinjaDetails} from '../redux.js';\\nimport { connect } from 'react-redux';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport axios from 'axios';\\nimport './../style/ninjagoldcount.css';\\n\\nclass NinjaGoldCount extends Component {\\n    constructor(props) {\\n      super(props);\\n      this.state={\\n                }\\n    }\\n    render() {\\n    \\n\\n      return (\\n        <div className=\\\"ninjagoldcountouterdiv\\\">\\n            <div className=\\\"ninjagoldcountheaderdiv\\\">NinjaGoldCount</div>\\n            <div className=\\\"counterstyle\\\">Gold Count:{this.props.goldCount}</div>\\n        </div>\\n      );\\n    }\\n  }\\n  \\n  const mapStateToProps = (state) => ({\\n    ninjaActionTrackerList:state.ninjaActionTrackerList,\\n    goldCount:state.goldCount\\n  })\\n  \\n  const mapDispatchToProps = (dispatch) => ({\\n    loadDetails: (payload) => dispatch(loadDetails(payload)),\\n    updateNinjaDetails: (payload) => dispatch(updateNinjaDetails(payload))\\n  })\\n  \\n  export default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n  )(NinjaGoldCount);\",\"import React, { Component } from \\\"react\\\";\\nimport { loadDetails,updateNinjaDetails} from '../redux.js';\\nimport { connect } from 'react-redux';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport axios from 'axios';\\nimport './../style/ninjagoldplayerarena.css'\\n\\nclass NinjaGoldPlayerArena extends Component {\\n    constructor(props) {\\n      super(props);\\n      this.state={\\n                }\\n    }\\n    handleNinjaActivity=(min,max,type)=>{\\n\\n        let goldCount=Math.floor(Math.random() * (max - min + 1)) + min;\\n        let textMessage=\\\"You've earned \\\"\\n        if(type===\\\"Farm\\\"){\\n           textMessage= textMessage +`${goldCount}`+ \\\" at the Farm\\\";\\n        }else if(type===\\\"Cave\\\"){\\n            textMessage= textMessage+`${goldCount}`+ \\\" at the Cave\\\";\\n        }else if(type===\\\"Casino\\\"){\\n            if(goldCount%2===0){\\n                goldCount=goldCount*(-1);\\n                let displayCount=goldCount*(-1);\\n                textMessage= \\\"You've lost \\\"+`${displayCount}`+ \\\" at the Casino\\\";\\n            }else{\\n                textMessage= textMessage+`${goldCount}`+ \\\" at the Casino\\\";\\n            }\\n            \\n        }else if(type===\\\"House\\\"){\\n            textMessage= textMessage+`${goldCount}`+ \\\" at the House\\\";\\n        }\\n        console.log(goldCount);\\n        let objectToUpdate={\\n                          ninjaactions:textMessage,\\n                          goldcount:goldCount\\n\\n        }\\n        this.props.updateNinjaDetails(objectToUpdate);\\n        setTimeout(()=>{this.updateServer()}, 1000);;\\n        \\n    }\\n    updateServer=()=>{\\n        let ninjaTrackerDetails={id:1,\\n                                 ninjaactions:this.props.ninjaActionTrackerList,\\n                                 goldcount:this.props.goldCount\\n                                 }\\n        axios.post(`http://localhost:5000/updateninjadetails/`,{ninjaTrackerDetails})\\n             .then((response) => {\\n                console.log(\\\"posted a the ninjadetails\\\",response.data);\\n                this.setState({error:\\\"\\\"});\\n             })\\n             .catch((error) => {\\n                  this.setState({error:\\\"Server connection failed\\\"});\\n              });   \\n\\n    }\\n    render() {\\n\\n      return (\\n        <div className=\\\"ninjagoldplayerarenaouterdiv\\\" >\\n            <div className=\\\"ninjagoldplayerarenaheaderdiv\\\">NinjaPlayerArena</div>\\n            <div className=\\\"playerarenadiv\\\">\\n                <div className=\\\"playerarenainnerdiv\\\">\\n                    <div className=\\\"header\\\">Farm</div>\\n                    <div className=\\\"descriptiondiv\\\">Earns 2 - 5 Gold</div>\\n                    <div><button onClick={()=>{this.handleNinjaActivity(2,5,\\\"Farm\\\")}} className=\\\"buttonstyle\\\" type=\\\"button\\\" >Farm</button></div>\\n                </div>\\n                <div className=\\\"playerarenainnerdiv\\\">\\n                    <div className=\\\"header\\\">Cave</div>\\n                    <div className=\\\"descriptiondiv\\\">Earns 5 - 10 Gold</div>\\n                    <div><button  onClick={()=>{this.handleNinjaActivity(5,10,\\\"Cave\\\")}} className=\\\"buttonstyle\\\" type=\\\"button\\\" >Cave</button></div>\\n                </div>\\n                <div className=\\\"playerarenainnerdiv\\\">\\n                    <div className=\\\"header\\\">Casino</div>\\n                    <div className=\\\"descriptiondiv\\\">Earn up to or loose up to 100 Gold</div>\\n                    <div><button onClick={()=>{this.handleNinjaActivity(0,100,\\\"Casino\\\")}} className=\\\"buttonstylecasino\\\" type=\\\"button\\\" >Casino</button></div>\\n                </div>\\n                <div className=\\\"playerarenainnerdiv\\\">\\n                    <div className=\\\"header\\\">House</div>\\n                    <div className=\\\"descriptiondiv\\\">Earns 7 - 15 Gold</div>\\n                    <div><button onClick={()=>{this.handleNinjaActivity(7,15,\\\"House\\\")}} className=\\\"buttonstyle\\\" type=\\\"button\\\" >House</button></div>\\n                </div>\\n            </div>\\n          \\n        </div>\\n      );\\n    }\\n  }\\n  const mapStateToProps = (state) => ({\\n    ninjaActionTrackerList:state.ninjaActionTrackerList,\\n    goldCount:state.goldCount\\n  })\\n  \\n  const mapDispatchToProps = (dispatch) => ({\\n    loadDetails: (payload) => dispatch(loadDetails(payload)),\\n    updateNinjaDetails: (payload) => dispatch(updateNinjaDetails(payload))\\n  })\\n  \\n  export default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n  )(NinjaGoldPlayerArena);\",\"import React, { Component } from \\\"react\\\";\\nimport { loadDetails,updateNinjaDetails} from '../redux.js';\\nimport { connect } from 'react-redux';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport axios from 'axios';\\nimport './../style/ninjagoldactiontracker.css';\\n\\nclass NinjaGoldActionTracker extends Component {\\n    constructor(props) {\\n      super(props);\\n      this.state={\\n                }\\n    }\\n    render() {\\n      const displayNinjaActionTracker=this.props.ninjaActionTrackerList.map((item,index)=>{\\n           return <li>{item}</li>\\n\\n      })\\n\\n      return (\\n        <div >\\n          <div className=\\\"ninjagoldactiontrackerouterdiv\\\">\\n            <div className=\\\"ninjagoldactiontrackerheaderdiv\\\">NinjaGoldActionTracker</div>\\n            <div className=\\\"listdiv\\\">\\n                <ul>\\n                    {displayNinjaActionTracker}\\n                </ul>\\n            </div>\\n        </div>\\n      </div>\\n      );\\n    }\\n  }\\n  const mapStateToProps = (state) => ({\\n    ninjaActionTrackerList:state.ninjaActionTrackerList,\\n    goldCount:state.goldCount\\n  })\\n  \\n  const mapDispatchToProps = (dispatch) => ({\\n    loadDetails: (payload) => dispatch(loadDetails(payload)),\\n    updateNinjaDetails: (payload) => dispatch(updateNinjaDetails(payload))\\n    \\n  })\\n  \\n  export default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n  )(NinjaGoldActionTracker);\",\"import React, { Component } from \\\"react\\\";\\nimport { loadDetails,updateNinjaDetails} from '../redux.js';\\nimport { connect } from 'react-redux';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport axios from 'axios';\\nimport NinjaGoldCount from \\\"./NinjaGoldCount.js\\\";\\nimport NinjaGoldPlayerArena from \\\"./NinjaGoldPlayerArena.js\\\";\\nimport NinjaGoldActionTracker from \\\"./NinjaGoldActionTracker.js\\\";\\n\\nclass NinjaGoldMain extends Component {\\n    constructor(props) {\\n      super(props);\\n      this.state={\\n                  error:\\\"\\\"\\n                }\\n    }\\n    retriveNinjaDetails=()=>{\\n        axios.get(`http://localhost:5000/getninjagolddetails/`)\\n        .then((response )=> {\\n            console.log(\\\"the ninja details\\\",response.data.data);\\n           this.props.loadDetails(response.data.data[0]);\\n           this.setState({error:\\\"\\\"});\\n        })\\n        .catch((error) => {\\n           this.setState({error:\\\"Server connection failed\\\"});\\n        });\\n    }\\n    componentDidMount(){\\n        this.retriveNinjaDetails();\\n    }\\n    render() {\\n\\n        \\n\\n      return (\\n        <div >\\n         <NinjaGoldCount/>\\n         <NinjaGoldPlayerArena/>\\n         <NinjaGoldActionTracker/>\\n      </div>\\n      );\\n    }\\n  }\\n  \\n  const mapStateToProps = (state) => ({\\n    ninjaActionTrackerList:state.ninjaActionTrackerList,\\n    goldCount:state.goldCount\\n  })\\n  \\n  const mapDispatchToProps = (dispatch) => ({\\n    loadDetails: (payload) => dispatch(loadDetails(payload)),\\n    updateNinjaDetails: (payload) => dispatch(updateNinjaDetails(payload))\\n  })\\n  \\n  export default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n  )(NinjaGoldMain);\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport NinjaGoldMain from './components/NinjaGoldMain';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n       <NinjaGoldMain/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport { Provider } from 'react-redux'\\nimport { store } from './redux';\\n\\nReactDOM.render(<Provider store={store}>\\n                    <App />\\n                </Provider>, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{28:function(e,t,n){e.exports=n(64)},33:function(e,t,n){},34:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},35:function(e,t,n){},61:function(e,t,n){},62:function(e,t,n){},63:function(e,t,n){},64:function(e,t,n){\"use strict\";n.r(t);var a=n(0),i=n.n(a),o=n(25),r=n.n(o),c=(n(33),n(2)),l=n(3),s=n(6),u=n(4),d=n(7),v=(n(34),n(35),n(27)),m=n(12),j=(n(36),function(e){return{type:\"RETRIVE_ALL\",payload:e}}),p=function(e){return{type:\"UPDATE\",payload:e}},f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h,t=arguments.length>1?arguments[1]:void 0;switch(console.log(\"reducer state\",e,t.type),t.type){case\"RETRIVE_ALL\":return Object.assign({},e,{ninjaActionTrackerList:t.payload.ninjaactions,goldCount:t.payload.goldcount});case\"UPDATE\":var n=t.payload.goldcount+e.goldCount;return Object.assign({},e,{ninjaActionTrackerList:[].concat(Object(v.a)(e.ninjaActionTrackerList),[t.payload.ninjaactions]),goldCount:n});default:return e}},h={ninjaActionTrackerList:[],goldCount:0};var b=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e;return Object(m.b)(f,e)}(),E=n(5),g=n(9),y=n.n(g),N=(n(61),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"ninjagoldcountouterdiv\"},i.a.createElement(\"div\",{className:\"ninjagoldcountheaderdiv\"},\"NinjaGoldCount\"),i.a.createElement(\"div\",{className:\"counterstyle\"},\"Gold Count:\",this.props.goldCount))}}]),t}(a.Component)),C=Object(E.b)(function(e){return{ninjaActionTrackerList:e.ninjaActionTrackerList,goldCount:e.goldCount}},function(e){return{loadDetails:function(t){return e(j(t))},updateNinjaDetails:function(t){return e(p(t))}}})(N),O=(n(62),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).handleNinjaActivity=function(e,t,a){var i=Math.floor(Math.random()*(t-e+1))+e,o=\"You've earned \";if(\"Farm\"===a)o=o+\"\".concat(i)+\" at the Farm\";else if(\"Cave\"===a)o=o+\"\".concat(i)+\" at the Cave\";else if(\"Casino\"===a){if(i%2===0)o=\"You've lost \"+\"\".concat(-1*(i*=-1))+\" at the Casino\";else o=o+\"\".concat(i)+\" at the Casino\"}else\"House\"===a&&(o=o+\"\".concat(i)+\" at the House\");console.log(i);var r={ninjaactions:o,goldcount:i};n.props.updateNinjaDetails(r),setTimeout(function(){n.updateServer()},1e3)},n.updateServer=function(){var e={id:1,ninjaactions:n.props.ninjaActionTrackerList,goldcount:n.props.goldCount};y.a.post(\"http://localhost:5000/updateninjadetails/\",{ninjaTrackerDetails:e}).then(function(e){console.log(\"posted a the ninjadetails\",e.data),n.setState({error:\"\"})}).catch(function(e){n.setState({error:\"Server connection failed\"})})},n.state={},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",{className:\"ninjagoldplayerarenaouterdiv\"},i.a.createElement(\"div\",{className:\"ninjagoldplayerarenaheaderdiv\"},\"NinjaPlayerArena\"),i.a.createElement(\"div\",{className:\"playerarenadiv\"},i.a.createElement(\"div\",{className:\"playerarenainnerdiv\"},i.a.createElement(\"div\",{className:\"header\"},\"Farm\"),i.a.createElement(\"div\",{className:\"descriptiondiv\"},\"Earns 2 - 5 Gold\"),i.a.createElement(\"div\",null,i.a.createElement(\"button\",{onClick:function(){e.handleNinjaActivity(2,5,\"Farm\")},className:\"buttonstyle\",type:\"button\"},\"Farm\"))),i.a.createElement(\"div\",{className:\"playerarenainnerdiv\"},i.a.createElement(\"div\",{className:\"header\"},\"Cave\"),i.a.createElement(\"div\",{className:\"descriptiondiv\"},\"Earns 5 - 10 Gold\"),i.a.createElement(\"div\",null,i.a.createElement(\"button\",{onClick:function(){e.handleNinjaActivity(5,10,\"Cave\")},className:\"buttonstyle\",type:\"button\"},\"Cave\"))),i.a.createElement(\"div\",{className:\"playerarenainnerdiv\"},i.a.createElement(\"div\",{className:\"header\"},\"Casino\"),i.a.createElement(\"div\",{className:\"descriptiondiv\"},\"Earn up to or loose up to 100 Gold\"),i.a.createElement(\"div\",null,i.a.createElement(\"button\",{onClick:function(){e.handleNinjaActivity(0,100,\"Casino\")},className:\"buttonstylecasino\",type:\"button\"},\"Casino\"))),i.a.createElement(\"div\",{className:\"playerarenainnerdiv\"},i.a.createElement(\"div\",{className:\"header\"},\"House\"),i.a.createElement(\"div\",{className:\"descriptiondiv\"},\"Earns 7 - 15 Gold\"),i.a.createElement(\"div\",null,i.a.createElement(\"button\",{onClick:function(){e.handleNinjaActivity(7,15,\"House\")},className:\"buttonstyle\",type:\"button\"},\"House\")))))}}]),t}(a.Component)),k=Object(E.b)(function(e){return{ninjaActionTrackerList:e.ninjaActionTrackerList,goldCount:e.goldCount}},function(e){return{loadDetails:function(t){return e(j(t))},updateNinjaDetails:function(t){return e(p(t))}}})(O),A=(n(63),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).state={},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){var e=this.props.ninjaActionTrackerList.map(function(e,t){return i.a.createElement(\"li\",null,e)});return i.a.createElement(\"div\",null,i.a.createElement(\"div\",{className:\"ninjagoldactiontrackerouterdiv\"},i.a.createElement(\"div\",{className:\"ninjagoldactiontrackerheaderdiv\"},\"NinjaGoldActionTracker\"),i.a.createElement(\"div\",{className:\"listdiv\"},i.a.createElement(\"ul\",null,e))))}}]),t}(a.Component)),T=Object(E.b)(function(e){return{ninjaActionTrackerList:e.ninjaActionTrackerList,goldCount:e.goldCount}},function(e){return{loadDetails:function(t){return e(j(t))},updateNinjaDetails:function(t){return e(p(t))}}})(A),L=function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(s.a)(this,Object(u.a)(t).call(this,e))).retriveNinjaDetails=function(){y.a.get(\"http://localhost:5000/getninjagolddetails/\").then(function(e){console.log(\"the ninja details\",e.data.data),n.props.loadDetails(e.data.data[0]),n.setState({error:\"\"})}).catch(function(e){n.setState({error:\"Server connection failed\"})})},n.state={error:\"\"},n}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.retriveNinjaDetails()}},{key:\"render\",value:function(){return i.a.createElement(\"div\",null,i.a.createElement(C,null),i.a.createElement(k,null),i.a.createElement(T,null))}}]),t}(a.Component),D=Object(E.b)(function(e){return{ninjaActionTrackerList:e.ninjaActionTrackerList,goldCount:e.goldCount}},function(e){return{loadDetails:function(t){return e(j(t))},updateNinjaDetails:function(t){return e(p(t))}}})(L),w=function(e){function t(){return Object(c.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"App\"},i.a.createElement(D,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(E.a,{store:b},i.a.createElement(w,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[28,1,2]]]);","extractedComments":[]}