{"map":"{\"version\":3,\"sources\":[\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/logo.svg\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/redux.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/components/NinjaGoldCount.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/components/NinjaGoldPlayerArena.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/components/NinjaGoldMain.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/App.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/serviceWorker.js\",\"/Users/SHA8350/BootCamp/ReactProject/ninjagold-redux/react-app/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"tabReducer\",\"state\",\"arguments\",\"length\",\"undefined\",\"initialState\",\"action\",\"console\",\"log\",\"type\",\"tabItems\",\"map\",\"tabItem\",\"id\",\"payload\",\"update\",\"tablist\",\"$push\",\"newItemlist\",\"Object\",\"assign\",\"nextID\",\"concat\",\"toConsumableArray\",\"store\",\"createStore\",\"configureStore\",\"NinjaGoldCount\",\"props\",\"_this\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"react_default\",\"a\",\"createElement\",\"className\",\"Component\",\"connect\",\"dispatch\",\"NinjaGoldPlayerArena\",\"NinjaGoldMain\",\"components_NinjaGoldCount\",\"components_NinjaGoldPlayerArena\",\"App\",\"components_NinjaGoldMain\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"es\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import {\\n    createStore,\\n} from 'redux';\\nimport update from 'react-addons-update';\\n\\nexport const addToTab = (payload) => ({\\n    type: 'ADD_TAB',   \\n    payload                     // <-- action.type\\n});\\n\\nexport const tabReducer=(state =initialState, action)=>{\\n    console.log(\\\"reducer state\\\",state,action.type);\\n    switch (action.type) {\\n        \\n      case 'UPDATE_TAB_DETAILS':\\n           const tabItems= state.tabItems.map( tabItem => {\\n            if (tabItem.id === action.payload.id) {\\n                return update(tabItem,{tablist:{$push: [action.payload.newItemlist]}})\\n            }\\n             return tabItem;\\n           })\\n            return Object.assign({},\\n                                state,\\n                                {tabItems:tabItems,nextID:state.nextID})\\n      case 'ADD_TAB':\\n\\n            return Object.assign({},\\n                                 state,\\n                                 { tabItems:[...state.tabItems,action.payload],nextID:state.nextID+1}\\n                                )\\n      case 'ADD_TAB_LIST':\\n            return Object.assign({},\\n                                 state,\\n                                 { tabItems:action.payload,nextID:action.payload[action.payload.length-1].id+1}\\n                                                    )                         \\n       default:\\n            return state;\\n    }\\n}\\n\\n\\n\\nconst initialState = { \\n    tabItems: [],\\n     nextID:0             \\n};\\n\\nexport function configureStore(initialState = initialState) { // initialState = initialState | {}\\n    const store = createStore(tabReducer,initialState);\\n    return store;\\n};\\n\\nexport const store = configureStore();\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { addToTab, updateTabDetails,addTabList} from '../redux.js';\\nimport { connect } from 'react-redux';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport axios from 'axios';\\nimport './../style/ninjagoldcount.css';\\n\\nclass NinjaGoldCount extends Component {\\n    constructor(props) {\\n      super(props);\\n      this.state={\\n                }\\n    }\\n    render() {\\n    \\n\\n      return (\\n        <div className=\\\"ninjagoldcountouterdiv\\\">\\n            <div className=\\\"ninjagoldcountheaderdiv\\\">NinjaGoldCount</div>\\n            <div className=\\\"counterstyle\\\">Gold Count:0</div>\\n        </div>\\n      );\\n    }\\n  }\\n  \\n  const mapStateToProps = (state) => ({\\n  })\\n  \\n  const mapDispatchToProps = (dispatch) => ({\\n  })\\n  \\n  export default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n  )(NinjaGoldCount);\",\"import React, { Component } from \\\"react\\\";\\nimport { addToTab, updateTabDetails,addTabList} from '../redux.js';\\nimport { connect } from 'react-redux';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport axios from 'axios';\\nimport './../style/ninjagoldplayerarena.css'\\n\\nclass NinjaGoldPlayerArena extends Component {\\n    constructor(props) {\\n      super(props);\\n      this.state={\\n                }\\n    }\\n    render() {\\n    \\n\\n      return (\\n        <div className=\\\"ninjagoldplayerarenaouterdiv\\\" >\\n            <div className=\\\"ninjagoldplayerarenaheaderdiv\\\">NinjaPlayerArena</div>\\n            <div >test</div>\\n          \\n        </div>\\n      );\\n    }\\n  }\\n  \\n  const mapStateToProps = (state) => ({\\n  })\\n  \\n  const mapDispatchToProps = (dispatch) => ({\\n  })\\n  \\n  export default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n  )(NinjaGoldPlayerArena);\",\"import React, { Component } from \\\"react\\\";\\nimport { addToTab, updateTabDetails,addTabList} from '../redux.js';\\nimport { connect } from 'react-redux';\\nimport { Link } from \\\"react-router-dom\\\";\\nimport axios from 'axios';\\nimport NinjaGoldCount from \\\"./NinjaGoldCount.js\\\";\\nimport NinjaGoldPlayerArena from \\\"./NinjaGoldPlayerArena.js\\\";\\n\\nclass NinjaGoldMain extends Component {\\n    constructor(props) {\\n      super(props);\\n      this.state={\\n                }\\n    }\\n    render() {\\n\\n        \\n\\n      return (\\n        <div >\\n         <NinjaGoldCount/>\\n         <NinjaGoldPlayerArena/>\\n      </div>\\n      );\\n    }\\n  }\\n  \\n  const mapStateToProps = (state) => ({\\n  })\\n  \\n  const mapDispatchToProps = (dispatch) => ({\\n  })\\n  \\n  export default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n  )(NinjaGoldMain);\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport NinjaGoldMain from './components/NinjaGoldMain';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n       <NinjaGoldMain/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport { Provider } from 'react-redux'\\nimport { store } from './redux';\\n\\nReactDOM.render(<Provider store={store}>\\n                    <App />\\n                </Provider>, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{29:function(e,t,n){e.exports=n(63)},34:function(e,t,n){},35:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},36:function(e,t,n){},61:function(e,t,n){},62:function(e,t,n){},63:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),c=n(25),o=n.n(c),i=(n(34),n(2)),u=n(3),l=n(6),s=n(4),d=n(7),b=(n(35),n(36),n(28)),m=n(11),j=n(26),v=n.n(j),f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:p,t=arguments.length>1?arguments[1]:void 0;switch(console.log(\"reducer state\",e,t.type),t.type){case\"UPDATE_TAB_DETAILS\":var n=e.tabItems.map(function(e){return e.id===t.payload.id?v()(e,{tablist:{$push:[t.payload.newItemlist]}}):e});return Object.assign({},e,{tabItems:n,nextID:e.nextID});case\"ADD_TAB\":return Object.assign({},e,{tabItems:[].concat(Object(b.a)(e.tabItems),[t.payload]),nextID:e.nextID+1});case\"ADD_TAB_LIST\":return Object.assign({},e,{tabItems:t.payload,nextID:t.payload[t.payload.length-1].id+1});default:return e}},p={tabItems:[],nextID:0};var O=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e;return Object(m.b)(f,e)}(),h=n(5),y=(n(13),n(61),function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).state={},n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"ninjagoldcountouterdiv\"},r.a.createElement(\"div\",{className:\"ninjagoldcountheaderdiv\"},\"NinjaGoldCount\"),r.a.createElement(\"div\",{className:\"counterstyle\"},\"Gold Count:0\"))}}]),t}(a.Component)),g=Object(h.b)(function(e){return{}},function(e){return{}})(y),E=(n(62),function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).state={},n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"ninjagoldplayerarenaouterdiv\"},r.a.createElement(\"div\",{className:\"ninjagoldplayerarenaheaderdiv\"},\"NinjaPlayerArena\"),r.a.createElement(\"div\",null,\"test\"))}}]),t}(a.Component)),I=Object(h.b)(function(e){return{}},function(e){return{}})(E),w=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).state={},n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(g,null),r.a.createElement(I,null))}}]),t}(a.Component),D=Object(h.b)(function(e){return{}},function(e){return{}})(w),A=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(D,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(h.a,{store:O},r.a.createElement(A,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[29,1,2]]]);","extractedComments":[]}